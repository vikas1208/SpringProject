<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="org.springframework.context.ConfigurableApplicationContext"/>
<fullyQualifiedTypeName name="org.springframework.context.annotation.Scope"/>
<fullyQualifiedTypeName name="javax.servlet.http.HttpSession"/>
<fullyQualifiedTypeName name="org.springframework.stereotype.Controller"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
<fullyQualifiedTypeName name="org.springframework.data.repository.CrudRepository"/>
<fullyQualifiedTypeName name="com.vikas.demo.model.Alien"/>
<fullyQualifiedTypeName name="com.vikas.demo.dao.AlienRepo"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestParam"/>
<fullyQualifiedTypeName name="org.springframework.web.servlet.ModelAndView"/>
<fullyQualifiedTypeName name="java.util.List"/>
<fullyQualifiedTypeName name="com.vikas.demo.dao.AlienRepoJPA"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestBody"/>
<fullyQualifiedTypeName name="javax.persistence.GeneratedValue"/>
<fullyQualifiedTypeName name="org.springframework.data.rest.core.annotation.RepositoryRestResource"/>
<fullyQualifiedTypeName name="com.in28minutes.microservices.limitservice.bean.LimitConfiguration"/>
<fullyQualifiedTypeName name="org.springframework.boot.context.properties.ConfigurationProperties"/>
<fullyQualifiedTypeName name="com.in28minutes.microservices.limitservice.Configuration"/>
<fullyQualifiedTypeName name="org.springframework.cloud.config.server.EnableConfigServer"/>
<fullyQualifiedTypeName name="org.omg.CORBA.Environment"/>
<fullyQualifiedTypeName name="org.springframework.cloud.config.environment.Environment"/>
<fullyQualifiedTypeName name="com.in28minutes.microservices.currencyexchangeservice.ExchangeValue"/>
<fullyQualifiedTypeName name="org.springframework.core.env.Environment"/>
<fullyQualifiedTypeName name="javax.persistence.Entity"/>
<fullyQualifiedTypeName name="javax.persistence.Id"/>
<fullyQualifiedTypeName name="javax.persistence.Column"/>
<fullyQualifiedTypeName name="org.springframework.data.jpa.repository.JpaRepository"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
<fullyQualifiedTypeName name="java.math.BigDecimal"/>
<fullyQualifiedTypeName name="org.springframework.web.client.RestTemplate"/>
<fullyQualifiedTypeName name="java.util.HashMap"/>
<fullyQualifiedTypeName name="java.util.Map"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.ResponseBody"/>
<fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
<fullyQualifiedTypeName name="org.springframework.cloud.openfeign.EnableFeignClients"/>
<fullyQualifiedTypeName name="com.in28minutes.microservices.currencyconversionservice.CurrencyConversionBean"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PathVariable"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
<fullyQualifiedTypeName name="com.in28minutes.microservices.currencyconversionservice.CurrencyExchangeServiceProxy"/>
<fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
<fullyQualifiedTypeName name="org.springframework.cloud.openfeign.FeignClient"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.ribbon.RibbonClient"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.server.EnableEurekaServer"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.zuul.EnableZuulProxy"/>
<fullyQualifiedTypeName name="org.springframework.cloud.client.discovery.EnableDiscoveryClient"/>
<fullyQualifiedTypeName name="org.springframework.stereotype.Component"/>
<fullyQualifiedTypeName name="com.netflix.zuul.ZuulFilter"/>
<fullyQualifiedTypeName name="com.netflix.zuul.context.RequestContext"/>
<fullyQualifiedTypeName name="javax.servlet.http.HttpServletRequest"/>
<fullyQualifiedTypeName name="org.hibernate.validator.internal.util.logging.LoggerFactory"/>
<fullyQualifiedTypeName name="org.slf4j.Logger"/>
<fullyQualifiedTypeName name="org.slf4j.LoggerFactory"/>
<fullyQualifiedTypeName name="com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule"/>
<fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
<fullyQualifiedTypeName name="brave.sampler.Sampler"/>
</qualifiedTypeNameHistroy>
